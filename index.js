(()=>{"use strict";var n={98:(n,r,e)=>{e.d(r,{Z:()=>s});var t=e(537),i=e.n(t),o=e(645),a=e.n(o)()(i());a.push([n.id,".garage {\r\n    margin: 0 30px;\r\n}\r\n\r\n.garage_title {\r\n    color: #E5EDFB;\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.garage_page {\r\n    color: #E5EDFB;\r\n    margin-bottom: 20px;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n}\r\n\r\n.car {\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.car_selection {\r\n    display: flex;\r\n    gap: 5px;\r\n}\r\n\r\n.selection_select,\r\n.selection_remove {\r\n    width: 80px;\r\n    height: 25px;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: #E5EDFB;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.selection_select:hover,\r\n.selection_remove:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n\r\n.selection_name {\r\n    color: #DAC665;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin-left: 20px;\r\n}\r\n\r\n.car_move {\r\n    display: flex;\r\n    gap: 5px;\r\n    align-items: flex-start;\r\n    height: 50px;\r\n}\r\n\r\n.move_start,\r\n.move_stop {\r\n    width: 30px;\r\n    height: 30px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: inherit;\r\n    color: #E5EDFB;\r\n}\r\n\r\n.move_start:disabled,\r\n.move_stop:disabled {\r\n    border: 2px solid rgb(93, 94, 93);\r\n    cursor: not-allowed;\r\n}\r\n\r\n.move_start:disabled:hover,\r\n.move_stop:disabled:hover {\r\n    background-color: inherit;\r\n}\r\n\r\n.move_start {\r\n    border: 2px solid #DAC665;\r\n}\r\n\r\n.move_start:hover {\r\n    background-color: #DAC665;\r\n}\r\n\r\n.move_stop {\r\n    border: 2px solid red;\r\n}\r\n\r\n.move_stop:hover {\r\n    background-color: rgb(241, 42, 42);\r\n}\r\n\r\n.move_icon {\r\n    align-self: flex-end;\r\n    margin-bottom: -20px;\r\n}\r\n\r\n.move_finish img {\r\n    width: 50px;\r\n    height: 50px;\r\n}\r\n\r\n.car_road {\r\n    height: 1px;\r\n    border-bottom: 2px dashed white;\r\n}\r\n\r\n.garage_pagination {\r\n    margin: 40px 0;\r\n    display: flex;\r\n    gap: 15px;\r\n}\r\n\r\n.garage_pagination button {\r\n    width: 70px;\r\n    height: 25px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: #E5EDFB;\r\n}\r\n\r\n.garage_pagination button:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n\r\n.garage_pagination button:disabled:hover {\r\n    background-color: #E5FBB2;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.race_winner {\r\n    position: fixed;\r\n    z-index: 10;\r\n    width: 500px;\r\n    padding: 30px 0;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    top: calc(50vh - 300px / 2);\r\n    left: calc(50vw - 500px / 2);\r\n    background-color: black;\r\n    color: #E5FBB2;\r\n    border: 2px solid #E5FBB2;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n}\r\n\r\n.winner_img {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.winner_img img {\r\n    width: 300px;\r\n    height: auto;\r\n}\r\n\r\n@media screen and (max-width: 2560px) {\r\n    .move_finish {\r\n        margin-left: calc(87vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 2100px) {\r\n    .move_finish {\r\n        margin-left: calc(85vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1780px) {\r\n    .move_finish {\r\n        margin-left: calc(81vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1440px) {\r\n    .move_finish {\r\n        margin-left: calc(78vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1280px) {\r\n    .move_finish {\r\n        margin-left: calc(75vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1050px) {\r\n    .move_finish {\r\n        margin-left: calc(70vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 900px) {\r\n    .move_finish {\r\n        margin-left: calc(65vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 767px) {\r\n    .move_finish {\r\n        margin-left: calc(60vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 650px) {\r\n    .move_finish {\r\n        margin-left: calc(50vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 580px) {\r\n    .move_finish {\r\n        margin-left: calc(45vw - 50px);\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./src/assets/css/garage.css"],names:[],mappings:"AAAA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,eAAe;IACf,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;;IAEI,WAAW;IACX,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,eAAe;IACf,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,eAAe;IACf,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,uBAAuB;IACvB,YAAY;AAChB;;AAEA;;IAEI,WAAW;IACX,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,eAAe;IACf,yBAAyB;IACzB,cAAc;AAClB;;AAEA;;IAEI,iCAAiC;IACjC,mBAAmB;AACvB;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,oBAAoB;IACpB,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,+BAA+B;AACnC;;AAEA;IACI,cAAc;IACd,aAAa;IACb,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,WAAW;IACX,YAAY;IACZ,eAAe;IACf,eAAe;IACf,iBAAiB;IACjB,2BAA2B;IAC3B,4BAA4B;IAC5B,uBAAuB;IACvB,cAAc;IACd,yBAAyB;IACzB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;AACJ",sourcesContent:[".garage {\r\n    margin: 0 30px;\r\n}\r\n\r\n.garage_title {\r\n    color: #E5EDFB;\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.garage_page {\r\n    color: #E5EDFB;\r\n    margin-bottom: 20px;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n}\r\n\r\n.car {\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.car_selection {\r\n    display: flex;\r\n    gap: 5px;\r\n}\r\n\r\n.selection_select,\r\n.selection_remove {\r\n    width: 80px;\r\n    height: 25px;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: #E5EDFB;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.selection_select:hover,\r\n.selection_remove:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n\r\n.selection_name {\r\n    color: #DAC665;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin-left: 20px;\r\n}\r\n\r\n.car_move {\r\n    display: flex;\r\n    gap: 5px;\r\n    align-items: flex-start;\r\n    height: 50px;\r\n}\r\n\r\n.move_start,\r\n.move_stop {\r\n    width: 30px;\r\n    height: 30px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: inherit;\r\n    color: #E5EDFB;\r\n}\r\n\r\n.move_start:disabled,\r\n.move_stop:disabled {\r\n    border: 2px solid rgb(93, 94, 93);\r\n    cursor: not-allowed;\r\n}\r\n\r\n.move_start:disabled:hover,\r\n.move_stop:disabled:hover {\r\n    background-color: inherit;\r\n}\r\n\r\n.move_start {\r\n    border: 2px solid #DAC665;\r\n}\r\n\r\n.move_start:hover {\r\n    background-color: #DAC665;\r\n}\r\n\r\n.move_stop {\r\n    border: 2px solid red;\r\n}\r\n\r\n.move_stop:hover {\r\n    background-color: rgb(241, 42, 42);\r\n}\r\n\r\n.move_icon {\r\n    align-self: flex-end;\r\n    margin-bottom: -20px;\r\n}\r\n\r\n.move_finish img {\r\n    width: 50px;\r\n    height: 50px;\r\n}\r\n\r\n.car_road {\r\n    height: 1px;\r\n    border-bottom: 2px dashed white;\r\n}\r\n\r\n.garage_pagination {\r\n    margin: 40px 0;\r\n    display: flex;\r\n    gap: 15px;\r\n}\r\n\r\n.garage_pagination button {\r\n    width: 70px;\r\n    height: 25px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: #E5EDFB;\r\n}\r\n\r\n.garage_pagination button:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n\r\n.garage_pagination button:disabled:hover {\r\n    background-color: #E5FBB2;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.race_winner {\r\n    position: fixed;\r\n    z-index: 10;\r\n    width: 500px;\r\n    padding: 30px 0;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    top: calc(50vh - 300px / 2);\r\n    left: calc(50vw - 500px / 2);\r\n    background-color: black;\r\n    color: #E5FBB2;\r\n    border: 2px solid #E5FBB2;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n}\r\n\r\n.winner_img {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.winner_img img {\r\n    width: 300px;\r\n    height: auto;\r\n}\r\n\r\n@media screen and (max-width: 2560px) {\r\n    .move_finish {\r\n        margin-left: calc(87vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 2100px) {\r\n    .move_finish {\r\n        margin-left: calc(85vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1780px) {\r\n    .move_finish {\r\n        margin-left: calc(81vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1440px) {\r\n    .move_finish {\r\n        margin-left: calc(78vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1280px) {\r\n    .move_finish {\r\n        margin-left: calc(75vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1050px) {\r\n    .move_finish {\r\n        margin-left: calc(70vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 900px) {\r\n    .move_finish {\r\n        margin-left: calc(65vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 767px) {\r\n    .move_finish {\r\n        margin-left: calc(60vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 650px) {\r\n    .move_finish {\r\n        margin-left: calc(50vw - 50px);\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 580px) {\r\n    .move_finish {\r\n        margin-left: calc(45vw - 50px);\r\n    }\r\n}\r\n"],sourceRoot:""}]);const s=a},234:(n,r,e)=>{e.d(r,{Z:()=>s});var t=e(537),i=e.n(t),o=e(645),a=e.n(o)()(i());a.push([n.id,"header {\r\n    display: flex;\r\n    gap: 20px;\r\n    align-items: center;\r\n    margin: 30px;\r\n}\r\n\r\nheader button {\r\n    width: 120px;\r\n    height: 30px;\r\n    text-transform: uppercase;\r\n    border-radius: 9px;\r\n    border: 1px solid #E5EDFB;\r\n    background-color: #E5EDFB;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\nheader button:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n","",{version:3,sources:["webpack://./src/assets/css/header.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,yBAAyB;IACzB,yBAAyB;IACzB,eAAe;IACf,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["header {\r\n    display: flex;\r\n    gap: 20px;\r\n    align-items: center;\r\n    margin: 30px;\r\n}\r\n\r\nheader button {\r\n    width: 120px;\r\n    height: 30px;\r\n    text-transform: uppercase;\r\n    border-radius: 9px;\r\n    border: 1px solid #E5EDFB;\r\n    background-color: #E5EDFB;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\nheader button:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n"],sourceRoot:""}]);const s=a},644:(n,r,e)=>{e.d(r,{Z:()=>s});var t=e(537),i=e.n(t),o=e(645),a=e.n(o)()(i());a.push([n.id,".settings {\r\n    margin: 0 0 30px 30px;\r\n}\r\n\r\n.settings_create,\r\n.settings_update,\r\n.settings_activity {\r\n    display: flex;\r\n    gap: 5px;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.create_input,\r\n.update_input {\r\n    width: 200px;\r\n    height: 25px;\r\n    outline: none;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    background-color: #E5EDFB;\r\n    border: none;\r\n    padding: 2px 5px;\r\n}\r\n\r\n.create_input::placeholder,\r\n.update_input::placeholder {\r\n    font-weight: 400;\r\n    color: rgb(140, 138, 138);\r\n}\r\n\r\n.create_input:focus,\r\n.update_input:focus {\r\n    background-color: #E5EDFB;\r\n}\r\n\r\n.create_color,\r\n.update_color {\r\n    width: 70px;\r\n    height: 29px;\r\n    background-color: #E5EDFB;\r\n    cursor: pointer;\r\n}\r\n\r\n.create_btn,\r\n.update_btn {\r\n    width: 100px;\r\n    height: 28px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    background-color: #E5EDFB;\r\n    cursor: pointer;\r\n}\r\n\r\n.create_btn:hover,\r\n.update_btn:hover,\r\n.settings_activity button:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n\r\n.settings_activity button {\r\n    height: 29px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.activity_race,\r\n.activity_reset {\r\n    width: 102px;\r\n    background-color: #E5EDFB\r\n}\r\n\r\n.activity_generate {\r\n    width: 175px;\r\n    background-color: #E5EDFB;\r\n}\r\n","",{version:3,sources:["webpack://./src/assets/css/settings.css"],names:[],mappings:"AAAA;IACI,qBAAqB;AACzB;;AAEA;;;IAGI,aAAa;IACb,QAAQ;IACR,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;;IAEI,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;;IAEI,gBAAgB;IAChB,yBAAyB;AAC7B;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;;IAEI,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,eAAe;AACnB;;AAEA;;IAEI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,yBAAyB;IACzB,eAAe;AACnB;;AAEA;;;IAGI,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;;IAEI,YAAY;IACZ;AACJ;;AAEA;IACI,YAAY;IACZ,yBAAyB;AAC7B",sourcesContent:[".settings {\r\n    margin: 0 0 30px 30px;\r\n}\r\n\r\n.settings_create,\r\n.settings_update,\r\n.settings_activity {\r\n    display: flex;\r\n    gap: 5px;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.create_input,\r\n.update_input {\r\n    width: 200px;\r\n    height: 25px;\r\n    outline: none;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    background-color: #E5EDFB;\r\n    border: none;\r\n    padding: 2px 5px;\r\n}\r\n\r\n.create_input::placeholder,\r\n.update_input::placeholder {\r\n    font-weight: 400;\r\n    color: rgb(140, 138, 138);\r\n}\r\n\r\n.create_input:focus,\r\n.update_input:focus {\r\n    background-color: #E5EDFB;\r\n}\r\n\r\n.create_color,\r\n.update_color {\r\n    width: 70px;\r\n    height: 29px;\r\n    background-color: #E5EDFB;\r\n    cursor: pointer;\r\n}\r\n\r\n.create_btn,\r\n.update_btn {\r\n    width: 100px;\r\n    height: 28px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    background-color: #E5EDFB;\r\n    cursor: pointer;\r\n}\r\n\r\n.create_btn:hover,\r\n.update_btn:hover,\r\n.settings_activity button:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n\r\n.settings_activity button {\r\n    height: 29px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.activity_race,\r\n.activity_reset {\r\n    width: 102px;\r\n    background-color: #E5EDFB\r\n}\r\n\r\n.activity_generate {\r\n    width: 175px;\r\n    background-color: #E5EDFB;\r\n}\r\n"],sourceRoot:""}]);const s=a},867:(n,r,e)=>{e.d(r,{Z:()=>s});var t=e(537),i=e.n(t),o=e(645),a=e.n(o)()(i());a.push([n.id,".winners {\r\n    margin: 0 30px;\r\n}\r\n\r\n.winners_title {\r\n    color: #E5EDFB;\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.winners_page {\r\n    color: #E5EDFB;\r\n    margin-bottom: 20px;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n}\r\n\r\n.winners th {\r\n    color: #000000;\r\n    width: 150px;\r\n    text-align: left;\r\n    padding: 5px;\r\n}\r\n\r\n.winners td {\r\n    color: #E5FBB2;\r\n    width: 150px;\r\n    text-align: left;\r\n    padding: 5px;\r\n}\r\n\r\n.winners th {\r\n    background-color: #E5EDFB;\r\n}\r\n\r\n.wins_header:hover,\r\n.time_header:hover {\r\n    cursor: pointer;\r\n    background-color: #E5FBB2;\r\n}\r\n\r\n.winners_pagination button {\r\n    width: 70px;\r\n    height: 25px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: #E5EDFB;\r\n    margin: 30px 0;\r\n}\r\n\r\n.winners_pagination button:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n","",{version:3,sources:["webpack://./src/assets/css/win.css"],names:[],mappings:"AAAA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,eAAe;IACf,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;;IAEI,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,eAAe;IACf,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:[".winners {\r\n    margin: 0 30px;\r\n}\r\n\r\n.winners_title {\r\n    color: #E5EDFB;\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.winners_page {\r\n    color: #E5EDFB;\r\n    margin-bottom: 20px;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n}\r\n\r\n.winners th {\r\n    color: #000000;\r\n    width: 150px;\r\n    text-align: left;\r\n    padding: 5px;\r\n}\r\n\r\n.winners td {\r\n    color: #E5FBB2;\r\n    width: 150px;\r\n    text-align: left;\r\n    padding: 5px;\r\n}\r\n\r\n.winners th {\r\n    background-color: #E5EDFB;\r\n}\r\n\r\n.wins_header:hover,\r\n.time_header:hover {\r\n    cursor: pointer;\r\n    background-color: #E5FBB2;\r\n}\r\n\r\n.winners_pagination button {\r\n    width: 70px;\r\n    height: 25px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: #E5EDFB;\r\n    margin: 30px 0;\r\n}\r\n\r\n.winners_pagination button:hover {\r\n    background-color: #E5FBB2;\r\n}\r\n"],sourceRoot:""}]);const s=a},424:(n,r,e)=>{e.d(r,{Z:()=>s});var t=e(537),i=e.n(t),o=e(645),a=e.n(o)()(i());a.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\r\n\r\n/* Document\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Correct the line height in all browsers.\r\n * 2. Prevent adjustments of font size after orientation changes in iOS.\r\n */\r\n\r\n html {\r\n    line-height: 1.15; /* 1 */\r\n    -webkit-text-size-adjust: 100%; /* 2 */\r\n  }\r\n  \r\n  /* Sections\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the margin in all browsers.\r\n   */\r\n  \r\n  body {\r\n    margin: 0;\r\n    background-color: #000000;\r\n  }\r\n\r\n  .hide {\r\n    display: none;\r\n  }\r\n  \r\n  /**\r\n   * Render the `main` element consistently in IE.\r\n   */\r\n  \r\n  main {\r\n    display: block;\r\n  }\r\n  \r\n  /**\r\n   * Correct the font size and margin on `h1` elements within `section` and\r\n   * `article` contexts in Chrome, Firefox, and Safari.\r\n   */\r\n  \r\n  h1 {\r\n    font-size: 2em;\r\n    margin: 0.67em 0;\r\n  }\r\n  \r\n  /* Grouping content\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * 1. Add the correct box sizing in Firefox.\r\n   * 2. Show the overflow in Edge and IE.\r\n   */\r\n  \r\n  hr {\r\n    box-sizing: content-box; /* 1 */\r\n    height: 0; /* 1 */\r\n    overflow: visible; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inheritance and scaling of font size in all browsers.\r\n   * 2. Correct the odd `em` font sizing in all browsers.\r\n   */\r\n  \r\n  pre {\r\n    font-family: monospace, monospace; /* 1 */\r\n    font-size: 1em; /* 2 */\r\n  }\r\n  \r\n  /* Text-level semantics\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the gray background on active links in IE 10.\r\n   */\r\n  \r\n  a {\r\n    background-color: transparent;\r\n  }\r\n  \r\n  /**\r\n   * 1. Remove the bottom border in Chrome 57-\r\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\r\n   */\r\n  \r\n  abbr[title] {\r\n    border-bottom: none; /* 1 */\r\n    text-decoration: underline; /* 2 */\r\n    text-decoration: underline dotted; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct font weight in Chrome, Edge, and Safari.\r\n   */\r\n  \r\n  b,\r\n  strong {\r\n    font-weight: bolder;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inheritance and scaling of font size in all browsers.\r\n   * 2. Correct the odd `em` font sizing in all browsers.\r\n   */\r\n  \r\n  code,\r\n  kbd,\r\n  samp {\r\n    font-family: monospace, monospace; /* 1 */\r\n    font-size: 1em; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct font size in all browsers.\r\n   */\r\n  \r\n  small {\r\n    font-size: 80%;\r\n  }\r\n  \r\n  /**\r\n   * Prevent `sub` and `sup` elements from affecting the line height in\r\n   * all browsers.\r\n   */\r\n  \r\n  sub,\r\n  sup {\r\n    font-size: 75%;\r\n    line-height: 0;\r\n    position: relative;\r\n    vertical-align: baseline;\r\n  }\r\n  \r\n  sub {\r\n    bottom: -0.25em;\r\n  }\r\n  \r\n  sup {\r\n    top: -0.5em;\r\n  }\r\n  \r\n  /* Embedded content\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the border on images inside links in IE 10.\r\n   */\r\n  \r\n  img {\r\n    border-style: none;\r\n  }\r\n  \r\n  /* Forms\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * 1. Change the font styles in all browsers.\r\n   * 2. Remove the margin in Firefox and Safari.\r\n   */\r\n  \r\n  button,\r\n  input,\r\n  optgroup,\r\n  select,\r\n  textarea {\r\n    font-family: inherit; /* 1 */\r\n    font-size: 100%; /* 1 */\r\n    line-height: 1.15; /* 1 */\r\n    margin: 0; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Show the overflow in IE.\r\n   * 1. Show the overflow in Edge.\r\n   */\r\n  \r\n  button,\r\n  input { /* 1 */\r\n    overflow: visible;\r\n  }\r\n  \r\n  /**\r\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\r\n   * 1. Remove the inheritance of text transform in Firefox.\r\n   */\r\n  \r\n  button,\r\n  select { /* 1 */\r\n    text-transform: none;\r\n  }\r\n  \r\n  /**\r\n   * Correct the inability to style clickable types in iOS and Safari.\r\n   */\r\n  \r\n  button,\r\n  [type="button"],\r\n  [type="reset"],\r\n  [type="submit"] {\r\n    --webkit-appearance: button;\r\n  }\r\n  \r\n  /**\r\n   * Remove the inner border and padding in Firefox.\r\n   */\r\n  \r\n  button::-moz-focus-inner,\r\n  [type="button"]::-moz-focus-inner,\r\n  [type="reset"]::-moz-focus-inner,\r\n  [type="submit"]::-moz-focus-inner {\r\n    border-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  /**\r\n   * Restore the focus styles unset by the previous rule.\r\n   */\r\n  \r\n  button:-moz-focusring,\r\n  [type="button"]:-moz-focusring,\r\n  [type="reset"]:-moz-focusring,\r\n  [type="submit"]:-moz-focusring {\r\n    outline: 1px dotted ButtonText;\r\n  }\r\n  \r\n  /**\r\n   * Correct the padding in Firefox.\r\n   */\r\n  \r\n  fieldset {\r\n    padding: 0.35em 0.75em 0.625em;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the text wrapping in Edge and IE.\r\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\r\n   * 3. Remove the padding so developers are not caught out when they zero out\r\n   *    `fieldset` elements in all browsers.\r\n   */\r\n  \r\n  legend {\r\n    box-sizing: border-box; /* 1 */\r\n    color: inherit; /* 2 */\r\n    display: table; /* 1 */\r\n    max-width: 100%; /* 1 */\r\n    padding: 0; /* 3 */\r\n    white-space: normal; /* 1 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\r\n   */\r\n  \r\n  progress {\r\n    vertical-align: baseline;\r\n  }\r\n  \r\n  /**\r\n   * Remove the default vertical scrollbar in IE 10+.\r\n   */\r\n  \r\n  textarea {\r\n    overflow: auto;\r\n  }\r\n  \r\n  /**\r\n   * 1. Add the correct box sizing in IE 10.\r\n   * 2. Remove the padding in IE 10.\r\n   */\r\n  \r\n  [type="checkbox"],\r\n  [type="radio"] {\r\n    box-sizing: border-box; /* 1 */\r\n    padding: 0; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Correct the cursor style of increment and decrement buttons in Chrome.\r\n   */\r\n  \r\n  [type="number"]::-webkit-inner-spin-button,\r\n  [type="number"]::-webkit-outer-spin-button {\r\n    height: auto;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the odd appearance in Chrome and Safari.\r\n   * 2. Correct the outline style in Safari.\r\n   */\r\n  \r\n  [type="search"] {\r\n    --webkit-appearance: textfield; /* 1 */\r\n    outline-offset: -2px; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Remove the inner padding in Chrome and Safari on macOS.\r\n   */\r\n  \r\n  [type="search"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inability to style clickable types in iOS and Safari.\r\n   * 2. Change font properties to `inherit` in Safari.\r\n   */\r\n  \r\n  ::-webkit-file-upload-button {\r\n    -webkit-appearance: button; /* 1 */\r\n    font: inherit; /* 2 */\r\n  }\r\n  \r\n  /* Interactive\r\n     ========================================================================== */\r\n  \r\n  /*\r\n   * Add the correct display in Edge, IE 10+, and Firefox.\r\n   */\r\n  \r\n  details {\r\n    display: block;\r\n  }\r\n  \r\n  /*\r\n   * Add the correct display in all browsers.\r\n   */\r\n  \r\n  summary {\r\n    display: list-item;\r\n  }\r\n  \r\n  /* Misc\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Add the correct display in IE 10+.\r\n   */\r\n  \r\n  template {\r\n    display: none;\r\n  }\r\n  \r\n  /**\r\n   * Add the correct display in IE 10.\r\n   */\r\n  \r\n  [hidden] {\r\n    display: none;\r\n  }\r\n',"",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;CAED;IACG,iBAAiB,EAAE,MAAM;IACzB,8BAA8B,EAAE,MAAM;EACxC;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,SAAS;IACT,yBAAyB;EAC3B;;EAEA;IACE,aAAa;EACf;;EAEA;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;;IAGE;;EAEF;IACE,cAAc;IACd,gBAAgB;EAClB;;EAEA;iFAC+E;;EAE/E;;;IAGE;;EAEF;IACE,uBAAuB,EAAE,MAAM;IAC/B,SAAS,EAAE,MAAM;IACjB,iBAAiB,EAAE,MAAM;EAC3B;;EAEA;;;IAGE;;EAEF;IACE,iCAAiC,EAAE,MAAM;IACzC,cAAc,EAAE,MAAM;EACxB;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,6BAA6B;EAC/B;;EAEA;;;IAGE;;EAEF;IACE,mBAAmB,EAAE,MAAM;IAC3B,0BAA0B,EAAE,MAAM;IAClC,iCAAiC,EAAE,MAAM;EAC3C;;EAEA;;IAEE;;EAEF;;IAEE,mBAAmB;EACrB;;EAEA;;;IAGE;;EAEF;;;IAGE,iCAAiC,EAAE,MAAM;IACzC,cAAc,EAAE,MAAM;EACxB;;EAEA;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;;IAGE;;EAEF;;IAEE,cAAc;IACd,cAAc;IACd,kBAAkB;IAClB,wBAAwB;EAC1B;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,WAAW;EACb;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,kBAAkB;EACpB;;EAEA;iFAC+E;;EAE/E;;;IAGE;;EAEF;;;;;IAKE,oBAAoB,EAAE,MAAM;IAC5B,eAAe,EAAE,MAAM;IACvB,iBAAiB,EAAE,MAAM;IACzB,SAAS,EAAE,MAAM;EACnB;;EAEA;;;IAGE;;EAEF;UACQ,MAAM;IACZ,iBAAiB;EACnB;;EAEA;;;IAGE;;EAEF;WACS,MAAM;IACb,oBAAoB;EACtB;;EAEA;;IAEE;;EAEF;;;;IAIE,2BAA2B;EAC7B;;EAEA;;IAEE;;EAEF;;;;IAIE,kBAAkB;IAClB,UAAU;EACZ;;EAEA;;IAEE;;EAEF;;;;IAIE,8BAA8B;EAChC;;EAEA;;IAEE;;EAEF;IACE,8BAA8B;EAChC;;EAEA;;;;;IAKE;;EAEF;IACE,sBAAsB,EAAE,MAAM;IAC9B,cAAc,EAAE,MAAM;IACtB,cAAc,EAAE,MAAM;IACtB,eAAe,EAAE,MAAM;IACvB,UAAU,EAAE,MAAM;IAClB,mBAAmB,EAAE,MAAM;EAC7B;;EAEA;;IAEE;;EAEF;IACE,wBAAwB;EAC1B;;EAEA;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;;IAGE;;EAEF;;IAEE,sBAAsB,EAAE,MAAM;IAC9B,UAAU,EAAE,MAAM;EACpB;;EAEA;;IAEE;;EAEF;;IAEE,YAAY;EACd;;EAEA;;;IAGE;;EAEF;IACE,8BAA8B,EAAE,MAAM;IACtC,oBAAoB,EAAE,MAAM;EAC9B;;EAEA;;IAEE;;EAEF;IACE,wBAAwB;EAC1B;;EAEA;;;IAGE;;EAEF;IACE,0BAA0B,EAAE,MAAM;IAClC,aAAa,EAAE,MAAM;EACvB;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;IAEE;;EAEF;IACE,kBAAkB;EACpB;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,aAAa;EACf;;EAEA;;IAEE;;EAEF;IACE,aAAa;EACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\r\n\r\n/* Document\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Correct the line height in all browsers.\r\n * 2. Prevent adjustments of font size after orientation changes in iOS.\r\n */\r\n\r\n html {\r\n    line-height: 1.15; /* 1 */\r\n    -webkit-text-size-adjust: 100%; /* 2 */\r\n  }\r\n  \r\n  /* Sections\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the margin in all browsers.\r\n   */\r\n  \r\n  body {\r\n    margin: 0;\r\n    background-color: #000000;\r\n  }\r\n\r\n  .hide {\r\n    display: none;\r\n  }\r\n  \r\n  /**\r\n   * Render the `main` element consistently in IE.\r\n   */\r\n  \r\n  main {\r\n    display: block;\r\n  }\r\n  \r\n  /**\r\n   * Correct the font size and margin on `h1` elements within `section` and\r\n   * `article` contexts in Chrome, Firefox, and Safari.\r\n   */\r\n  \r\n  h1 {\r\n    font-size: 2em;\r\n    margin: 0.67em 0;\r\n  }\r\n  \r\n  /* Grouping content\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * 1. Add the correct box sizing in Firefox.\r\n   * 2. Show the overflow in Edge and IE.\r\n   */\r\n  \r\n  hr {\r\n    box-sizing: content-box; /* 1 */\r\n    height: 0; /* 1 */\r\n    overflow: visible; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inheritance and scaling of font size in all browsers.\r\n   * 2. Correct the odd `em` font sizing in all browsers.\r\n   */\r\n  \r\n  pre {\r\n    font-family: monospace, monospace; /* 1 */\r\n    font-size: 1em; /* 2 */\r\n  }\r\n  \r\n  /* Text-level semantics\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the gray background on active links in IE 10.\r\n   */\r\n  \r\n  a {\r\n    background-color: transparent;\r\n  }\r\n  \r\n  /**\r\n   * 1. Remove the bottom border in Chrome 57-\r\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\r\n   */\r\n  \r\n  abbr[title] {\r\n    border-bottom: none; /* 1 */\r\n    text-decoration: underline; /* 2 */\r\n    text-decoration: underline dotted; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct font weight in Chrome, Edge, and Safari.\r\n   */\r\n  \r\n  b,\r\n  strong {\r\n    font-weight: bolder;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inheritance and scaling of font size in all browsers.\r\n   * 2. Correct the odd `em` font sizing in all browsers.\r\n   */\r\n  \r\n  code,\r\n  kbd,\r\n  samp {\r\n    font-family: monospace, monospace; /* 1 */\r\n    font-size: 1em; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct font size in all browsers.\r\n   */\r\n  \r\n  small {\r\n    font-size: 80%;\r\n  }\r\n  \r\n  /**\r\n   * Prevent `sub` and `sup` elements from affecting the line height in\r\n   * all browsers.\r\n   */\r\n  \r\n  sub,\r\n  sup {\r\n    font-size: 75%;\r\n    line-height: 0;\r\n    position: relative;\r\n    vertical-align: baseline;\r\n  }\r\n  \r\n  sub {\r\n    bottom: -0.25em;\r\n  }\r\n  \r\n  sup {\r\n    top: -0.5em;\r\n  }\r\n  \r\n  /* Embedded content\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the border on images inside links in IE 10.\r\n   */\r\n  \r\n  img {\r\n    border-style: none;\r\n  }\r\n  \r\n  /* Forms\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * 1. Change the font styles in all browsers.\r\n   * 2. Remove the margin in Firefox and Safari.\r\n   */\r\n  \r\n  button,\r\n  input,\r\n  optgroup,\r\n  select,\r\n  textarea {\r\n    font-family: inherit; /* 1 */\r\n    font-size: 100%; /* 1 */\r\n    line-height: 1.15; /* 1 */\r\n    margin: 0; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Show the overflow in IE.\r\n   * 1. Show the overflow in Edge.\r\n   */\r\n  \r\n  button,\r\n  input { /* 1 */\r\n    overflow: visible;\r\n  }\r\n  \r\n  /**\r\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\r\n   * 1. Remove the inheritance of text transform in Firefox.\r\n   */\r\n  \r\n  button,\r\n  select { /* 1 */\r\n    text-transform: none;\r\n  }\r\n  \r\n  /**\r\n   * Correct the inability to style clickable types in iOS and Safari.\r\n   */\r\n  \r\n  button,\r\n  [type="button"],\r\n  [type="reset"],\r\n  [type="submit"] {\r\n    --webkit-appearance: button;\r\n  }\r\n  \r\n  /**\r\n   * Remove the inner border and padding in Firefox.\r\n   */\r\n  \r\n  button::-moz-focus-inner,\r\n  [type="button"]::-moz-focus-inner,\r\n  [type="reset"]::-moz-focus-inner,\r\n  [type="submit"]::-moz-focus-inner {\r\n    border-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  /**\r\n   * Restore the focus styles unset by the previous rule.\r\n   */\r\n  \r\n  button:-moz-focusring,\r\n  [type="button"]:-moz-focusring,\r\n  [type="reset"]:-moz-focusring,\r\n  [type="submit"]:-moz-focusring {\r\n    outline: 1px dotted ButtonText;\r\n  }\r\n  \r\n  /**\r\n   * Correct the padding in Firefox.\r\n   */\r\n  \r\n  fieldset {\r\n    padding: 0.35em 0.75em 0.625em;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the text wrapping in Edge and IE.\r\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\r\n   * 3. Remove the padding so developers are not caught out when they zero out\r\n   *    `fieldset` elements in all browsers.\r\n   */\r\n  \r\n  legend {\r\n    box-sizing: border-box; /* 1 */\r\n    color: inherit; /* 2 */\r\n    display: table; /* 1 */\r\n    max-width: 100%; /* 1 */\r\n    padding: 0; /* 3 */\r\n    white-space: normal; /* 1 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\r\n   */\r\n  \r\n  progress {\r\n    vertical-align: baseline;\r\n  }\r\n  \r\n  /**\r\n   * Remove the default vertical scrollbar in IE 10+.\r\n   */\r\n  \r\n  textarea {\r\n    overflow: auto;\r\n  }\r\n  \r\n  /**\r\n   * 1. Add the correct box sizing in IE 10.\r\n   * 2. Remove the padding in IE 10.\r\n   */\r\n  \r\n  [type="checkbox"],\r\n  [type="radio"] {\r\n    box-sizing: border-box; /* 1 */\r\n    padding: 0; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Correct the cursor style of increment and decrement buttons in Chrome.\r\n   */\r\n  \r\n  [type="number"]::-webkit-inner-spin-button,\r\n  [type="number"]::-webkit-outer-spin-button {\r\n    height: auto;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the odd appearance in Chrome and Safari.\r\n   * 2. Correct the outline style in Safari.\r\n   */\r\n  \r\n  [type="search"] {\r\n    --webkit-appearance: textfield; /* 1 */\r\n    outline-offset: -2px; /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Remove the inner padding in Chrome and Safari on macOS.\r\n   */\r\n  \r\n  [type="search"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inability to style clickable types in iOS and Safari.\r\n   * 2. Change font properties to `inherit` in Safari.\r\n   */\r\n  \r\n  ::-webkit-file-upload-button {\r\n    -webkit-appearance: button; /* 1 */\r\n    font: inherit; /* 2 */\r\n  }\r\n  \r\n  /* Interactive\r\n     ========================================================================== */\r\n  \r\n  /*\r\n   * Add the correct display in Edge, IE 10+, and Firefox.\r\n   */\r\n  \r\n  details {\r\n    display: block;\r\n  }\r\n  \r\n  /*\r\n   * Add the correct display in all browsers.\r\n   */\r\n  \r\n  summary {\r\n    display: list-item;\r\n  }\r\n  \r\n  /* Misc\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Add the correct display in IE 10+.\r\n   */\r\n  \r\n  template {\r\n    display: none;\r\n  }\r\n  \r\n  /**\r\n   * Add the correct display in IE 10.\r\n   */\r\n  \r\n  [hidden] {\r\n    display: none;\r\n  }\r\n'],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);t&&a[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),r.push(d))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(i," */");return[r].concat([o]).join("\n")}return[r].join("\n")}},379:(n,r,e)=>{var t,i=function(){var n={};return function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[r]=e}return n[r]}}(),o=[];function a(n){for(var r=-1,e=0;e<o.length;e++)if(o[e].identifier===n){r=e;break}return r}function s(n,r){for(var e={},t=[],i=0;i<n.length;i++){var s=n[i],A=r.base?s[0]+r.base:s[0],c=e[A]||0,d="".concat(A," ").concat(c);e[A]=c+1;var l=a(d),h={css:s[1],media:s[2],sourceMap:s[3]};-1!==l?(o[l].references++,o[l].updater(h)):o.push({identifier:d,updater:g(h,r),references:1}),t.push(d)}return t}function A(n){var r=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var o=e.nc;o&&(t.nonce=o)}if(Object.keys(t).forEach((function(n){r.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(r);else{var a=i(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(r)}return r}var c,d=(c=[],function(n,r){return c[n]=r,c.filter(Boolean).join("\n")});function l(n,r,e,t){var i=e?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=d(r,i);else{var o=document.createTextNode(i),a=n.childNodes;a[r]&&n.removeChild(a[r]),a.length?n.insertBefore(o,a[r]):n.appendChild(o)}}function h(n,r,e){var t=e.css,i=e.media,o=e.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var u=null,p=0;function g(n,r){var e,t,i;if(r.singleton){var o=p++;e=u||(u=A(r)),t=l.bind(null,e,o,!1),i=l.bind(null,e,o,!0)}else e=A(r),t=h.bind(null,e,r),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return t(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;t(n=r)}else i()}}n.exports=function(n,r){(r=r||{}).singleton||"boolean"==typeof r.singleton||(r.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var e=s(n=n||[],r);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<e.length;t++){var i=a(e[t]);o[i].references--}for(var A=s(n,r),c=0;c<e.length;c++){var d=a(e[c]);0===o[d].references&&(o[d].updater(),o.splice(d,1))}e=A}}}}},r={};function e(t){var i=r[t];if(void 0!==i)return i.exports;var o=r[t]={id:t,exports:{}};return n[t](o,o.exports,e),o.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0;var t={};(()=>{e.d(t,{l:()=>j});const n="http://127.0.0.1:3000",r="/garage",i="/winners",o={number:1,limit:7},a={number:1,limit:10},s={sortBy:"",order:""},A={},c=["ACURA","Alfa Romeo","Alpine","Apollo","Apple","Aston Martin","Audi","ALFA ROMEO","Bentley","BMW","Bollinger","Brilliance","Bugatti","FERRARI","BYD","Cadillac","Chana","Chery","Chevrolet","Chrysler","Citroen","Continental","CUPRA","LIFAN","Daewoo","Daihatsu","Datsun","Detroit Electric","Dodge","DS Automobiles","FAW","SUBARU","Fiat","Fisker","Ford","Foxtron","Geely","Genesis","GMC","Great Wall","Haval","Honda","Hummer","Hyundai","Ineos","Infiniti","Iran Khodro","JAC","Jaguar","Jeep","JETOUR","KIA","Koenigsegg","Lada","Lamborghini","Lancia","Land Rover","Lexus","Lifan","Lincoln","Lordstown","Lotus","Lucid","LvChi","ГАЗ","Maserati","Maybach","Mazda","MCLaren","Mercedes-Benz","MG","MINI","Mitsubishi","Nikola","RAVON","Nissan","Opel","Pagani","Peugeot","Polestar","Porsche","EXEED","Range Rover","Ravon","Renault","Rimac","Rivian","Rolls-Royce","GENESIS","Saipa","SEAT","Skoda","smart","SsangYong","HAVAL","Stellantis","Subaru","Suzuki","Tata","Tesla","Torsus","Toyota","VinFast","Volkswagen","Volvo","GAC","Zotye"],d=["CONTINENTAL GT","B-3","FLYNG SPUR","GHOST","PHANTOM","X7","X5","X3","X6 M","X6","X1","X4","C3","C5","BEETLE","CR-V","Corolla","CADDY","DS3","C1","C3","A-3","A-4","A-5","SHARAN","TOUAREG","SCIROCCO","Rapid","Largus","IS 200t","LS 500h","RX","ES 200/250/350","Hatchback","CX-5","Sedan","CX-30","CX-9","CX-3","Tugela","Phantom","Camry","Polo","B-5","Ghost","Dawn","Duster","Arkana","Sandero","Logan","AMAROK","Logan","Captur","Kadjar","RAV4","Rio","Creta","Solaris"];var l=function(n,r,e,t){return new(e||(e=Promise))((function(i,o){function a(n){try{A(t.next(n))}catch(n){o(n)}}function s(n){try{A(t.throw(n))}catch(n){o(n)}}function A(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,s)}A((t=t.apply(n,r||[])).next())}))};class h{constructor(){this.garage=`${n}${r}`,this.engine=`${n}/engine`}getCar(n){return l(this,void 0,void 0,(function*(){const r=yield fetch(`${this.garage}/${n}`);return yield r.json()}))}getCars(){return l(this,void 0,void 0,(function*(){const n=yield fetch(`${this.garage}?_page=${o.number}&_limit=${o.limit}`);return yield n.json()}))}getAllCars(){return l(this,void 0,void 0,(function*(){const n=yield fetch(`${this.garage}`);return yield n.json()}))}createCar(n){return l(this,void 0,void 0,(function*(){const r=yield fetch(this.garage,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});return yield r.json()}))}updateCar(n,r){return l(this,void 0,void 0,(function*(){const e=yield fetch(`${this.garage}/${n}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});return yield e.json()}))}deleteCar(n){return l(this,void 0,void 0,(function*(){const r=yield fetch(`${this.garage}/${n}`,{method:"DELETE"});return yield r.json()}))}startEngine(n){return l(this,void 0,void 0,(function*(){const r=yield fetch(`${this.engine}?id=${n}&status=started`,{method:"PATCH"});return yield r.json()}))}stopEngine(n){return l(this,void 0,void 0,(function*(){const r=yield fetch(`${this.engine}?id=${n}&status=stopped`,{method:"PATCH"});return yield r.json()}))}drive(n,r){return l(this,void 0,void 0,(function*(){try{const e=yield fetch(`${this.engine}?id=${n}&status=drive`,{method:"PATCH",signal:r}).catch();return 200!==e.status?{success:!1}:Object.assign({},yield e.json())}catch(n){return null}}))}}var u=function(n,r,e,t){return new(e||(e=Promise))((function(i,o){function a(n){try{A(t.next(n))}catch(n){o(n)}}function s(n){try{A(t.throw(n))}catch(n){o(n)}}function A(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,s)}A((t=t.apply(n,r||[])).next())}))};const p=()=>u(void 0,void 0,void 0,(function*(){const e=yield fetch(`${n}${r}?_page=${o.number}&_limit=${o.limit}`);return Number(e.headers.get("X-Total-Count"))})),g=()=>u(void 0,void 0,void 0,(function*(){const r=yield fetch(`${n}${i}?_page=${a.number}&_limit=${a.limit}`);return Number(r.headers.get("X-Total-Count"))}));var m=function(n,r,e,t){return new(e||(e=Promise))((function(i,o){function a(n){try{A(t.next(n))}catch(n){o(n)}}function s(n){try{A(t.throw(n))}catch(n){o(n)}}function A(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,s)}A((t=t.apply(n,r||[])).next())}))};class E{constructor(){this.winners=`${n}${i}`,this.garage=`${n}${r}`,this.setSorting=(n,r)=>n&&r?`&_sort=${n}&_order=${r}`:""}getWinner(n){return m(this,void 0,void 0,(function*(){const r=yield fetch(`${this.winners}/${n}`);return yield r.json()}))}getWinners(){return m(this,void 0,void 0,(function*(){const n=this.setSorting(s.sortBy,s.order),r=yield fetch(`${this.winners}?_page=${a.number}&_limit=${a.limit}${n}`);return yield r.json()}))}getFullWinnerInfo(n){return m(this,void 0,void 0,(function*(){const r=yield fetch(`${this.garage}`),e=yield r.json(),t={id:0,name:"",color:"",wins:0,time:0};return e.forEach((r=>{n.id===r.id&&(t.id=r.id,t.name=r.name,t.color=r.color,t.wins=n.wins,t.time=n.time)})),t}))}createWinner(n){return m(this,void 0,void 0,(function*(){const r=yield fetch(this.winners,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});return yield r.json()}))}updateWinner(n,r){return m(this,void 0,void 0,(function*(){const e=yield fetch(`${this.winners}/${n}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});return yield e.json()}))}deleteWinner(n){return m(this,void 0,void 0,(function*(){const r=yield fetch(`${this.winners}/${n}`,{method:"DELETE"});return yield r.json()}))}checkWinner(n){return m(this,void 0,void 0,(function*(){const r=document.querySelector(".winners_title"),e=yield this.getWinner(+n.id);if(Object.keys(e).length){const r=e.wins,t=e.time;yield this.updateWinner(+n.id,{wins:r+1,time:t<n.time?t:n.time}),j.winners.drawAllWinners()}else{const e=yield this.createWinner({id:+n.id,wins:1,time:n.time});if((yield g())<=10){const n=yield this.getFullWinnerInfo(e);j.winners.drawWinner(n)}j.winners.checkDisable(),r.innerHTML=`Winners(${yield g()})`}}))}}const f=(n,r,e)=>{const t=r.querySelector(".move_icon");let i=t.offsetLeft;const o=document.documentElement.clientWidth-220,a=e.distance/e.velocity/1e3*60,s=(o-t.offsetLeft)/a,c=()=>{i+=s,t.style.transform=`translateX(${i}px)`,i<o&&(A[`${n}`]=requestAnimationFrame(c))};c()};var b=function(n,r,e,t){return new(e||(e=Promise))((function(i,o){function a(n){try{A(t.next(n))}catch(n){o(n)}}function s(n){try{A(t.throw(n))}catch(n){o(n)}}function A(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,s)}A((t=t.apply(n,r||[])).next())}))};class C{constructor(){this.body=document.body,this.carApi=new h,this.winnerModel=new E,this.drawGarage=()=>b(this,void 0,void 0,(function*(){const n=document.querySelector(".garage_cars"),r=document.querySelector(".garage_page"),e=yield this.carApi.getCars();return n.innerHTML="",r.innerHTML=`Page #${o.number}`,e.forEach((n=>j.garage.drawCars(n)))})),this.drawNextCar=()=>b(this,void 0,void 0,(function*(){const n=o.number*o.limit-1,r=yield this.carApi.getAllCars();r[n]&&j.garage.drawCars(r[n])})),this.checkDriveStatus=(n,r)=>b(this,void 0,void 0,(function*(){const e=yield this.carApi.drive(+n,r);return!(!e||!e.success&&(yield this.carApi.stopEngine(+n),cancelAnimationFrame(A[n]),1))})),this.controller=new AbortController}listenRemoveBtn(){const n=document.querySelector(".garage_cars"),r=document.querySelector(".garage_title");this.body.addEventListener("click",(e=>b(this,void 0,void 0,(function*(){const t=e.target;if(t.classList.contains("selection_remove")){const e=t.closest(".car");if(this.carApi.deleteCar(+e.id),n.removeChild(e),j.garage.checkDisable(),this.drawNextCar(),r.innerHTML=`Garage(${yield p()})`,0!==Object.keys(yield this.winnerModel.getWinner(+e.id)).length){const n=document.querySelector(".winners_title");this.winnerModel.deleteWinner(+e.id),n.innerHTML=`Winners(${yield g()})`,j.winners.drawAllWinners()}}}))))}listenSelectBtn(){const n=document.querySelector(".update_input"),r=document.querySelector(".update_color"),e=document.querySelector(".update_btn");this.body.addEventListener("click",(t=>b(this,void 0,void 0,(function*(){const i=t.target;if(i.classList.contains("selection_select")){const t=i.closest(".car"),o=yield this.carApi.getCar(+t.id);n.value=o.name,r.value=o.color,e.id=`update${o.id}`}}))))}listenStart(){this.body.addEventListener("click",(n=>b(this,void 0,void 0,(function*(){const r=n.target;if(r.classList.contains("move_start")){const n=r.closest(".car"),e=n.querySelector(".move_stop"),t=yield this.carApi.startEngine(+n.id);f(n.id,n,t),e.disabled=!1,r.disabled=!0,this.checkDriveStatus(n.id,this.controller.signal)}}))))}listenStop(){this.body.addEventListener("click",(n=>b(this,void 0,void 0,(function*(){const r=n.target;if(r.classList.contains("move_stop")){const n=r.closest(".car"),e=n.querySelector(".move_icon"),t=n.querySelector(".move_start");yield this.carApi.stopEngine(+n.id),cancelAnimationFrame(A[n.id]),t.disabled=!1,r.disabled=!0,e.style.transform="",this.controller.abort(),this.controller=new AbortController}}))))}listenPagination(){this.body.addEventListener("click",(n=>b(this,void 0,void 0,(function*(){const r=yield p(),e=n.target;e.classList.contains("pagination_prev")&&o.number>1&&(o.number-=1,this.drawGarage()),e.classList.contains("pagination_next")&&o.number<=Math.ceil(r/o.limit)&&(o.number+=1,this.drawGarage())}))))}}class v{constructor(){this.body=document.body}addListenerGarage(){const n=document.querySelector(".garage"),r=document.querySelector(".winners"),e=document.querySelector(".settings");this.body.addEventListener("click",(t=>{t.target.classList.contains("header_garage")&&(r.classList.add("hide"),n.classList.remove("hide"),e.classList.remove("hide"))}))}addListenerWinners(){const n=document.querySelector(".garage"),r=document.querySelector(".winners"),e=document.querySelector(".settings");this.body.addEventListener("click",(t=>{t.target.classList.contains("header_winners")&&(r.classList.remove("hide"),n.classList.add("hide"),e.classList.add("hide"))}))}}const B=()=>{const n=Math.floor(Math.random()*c.length),r=Math.floor(Math.random()*d.length);return`${c[n]} ${d[r]}`};var y=function(n,r,e,t){return new(e||(e=Promise))((function(i,o){function a(n){try{A(t.next(n))}catch(n){o(n)}}function s(n){try{A(t.throw(n))}catch(n){o(n)}}function A(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,s)}A((t=t.apply(n,r||[])).next())}))};class w{constructor(){this.body=document.body,this.carApi=new h,this.winnerModel=new E,this.resetInputs=(n,r)=>{n.value="",r.value="#DAC665"},this.updateCar=(n,r,e)=>{const t=n.querySelector(".selection_name"),i=n.querySelector("path");t.innerHTML=`${r.value}`,i.style.fill=`${e.value}`},this.updateWinner=(n,r,e)=>{if(document.getElementById(`${n}winner`)){const t=document.getElementById(`${n}winner`),i=t.querySelector(".winner_name"),o=t.querySelector("path");i.innerHTML=`${r.value}`,o.style.fill=`${e.value}`}},this.controller=new AbortController}listenCreateBtn(){const n=document.querySelector(".create_input"),r=document.querySelector(".create_color"),e=document.querySelector(".garage_title");this.body.addEventListener("click",(t=>y(this,void 0,void 0,(function*(){if(t.target.classList.contains("create_btn")){const t=yield this.carApi.createCar({name:n.value,color:r.value});(yield p())<=7&&j.garage.drawCars(t),this.resetInputs(n,r),e.innerHTML=`Garage(${yield p()})`,j.garage.checkDisable()}}))))}listenUpdateBtn(){const n=document.querySelector(".update_input"),r=document.querySelector(".update_color");this.body.addEventListener("click",(e=>y(this,void 0,void 0,(function*(){const t=e.target;if(t.classList.contains("update_btn")){const e=+t.id.replace(/[\D]+/g,""),i=document.getElementById(`${e}`);yield this.carApi.updateCar(e,{name:n.value,color:r.value}),t.removeAttribute("id"),this.updateCar(i,n,r),this.updateWinner(e,n,r),this.resetInputs(n,r)}}))))}listenRaceBtn(){return y(this,void 0,void 0,(function*(){this.body.addEventListener("click",(n=>y(this,void 0,void 0,(function*(){const r=n.target,e=document.querySelectorAll(".car");if(r.classList.contains("activity_race")){const n=[];let r=[];yield Promise.all(Array.from(e).map((e=>y(this,void 0,void 0,(function*(){const t=e.querySelector(".move_start"),i=e.querySelector(".move_stop"),o=yield this.carApi.startEngine(+e.id),a=o.distance/o.velocity/1e3;f(e.id,e,o),t.disabled=!0,i.disabled=!1,(yield j.garageControllers.checkDriveStatus(e.id,this.controller.signal))?(n.push({id:e.id,time:+a.toFixed(1)}),r=[]):r.push(e.id),n[0]&&1===n.length&&!r.length&&(j.garage.drawWinModal(n[0]),this.winnerModel.checkWinner(n[0]))})))))}}))))}))}listenResetBtn(){this.body.addEventListener("click",(n=>y(this,void 0,void 0,(function*(){const r=n.target,e=document.querySelectorAll(".move_icon"),t=document.querySelectorAll(".move_start"),i=document.querySelectorAll(".move_stop");r.classList.contains("activity_reset")&&(this.controller.abort(),Object.keys(A).forEach((n=>y(this,void 0,void 0,(function*(){yield this.carApi.stopEngine(+n),cancelAnimationFrame(A[n]),e.forEach((n=>{n.style.transform=""})),t.forEach((n=>{n.disabled=!1})),i.forEach((n=>{n.disabled=!0}))})))),this.controller=new AbortController)}))))}listenGenerateBtn(){const n=document.querySelector(".garage_title");this.body.addEventListener("click",(r=>y(this,void 0,void 0,(function*(){if(r.target.classList.contains("activity_generate")){const r=yield p(),e=[];for(let n=1;n<=100;n+=1){const n=this.carApi.createCar({name:B(),color:"#"+(Math.random().toString(16)+"000000").substring(2,8)});e.push(n)}const t=yield Promise.all(e);n.innerHTML=`Garage(${yield p()})`,r<7&&t.forEach(((n,e)=>{r+e+1<=7&&j.garage.drawCars(n)}))}}))))}}var I=function(n,r,e,t){return new(e||(e=Promise))((function(i,o){function a(n){try{A(t.next(n))}catch(n){o(n)}}function s(n){try{A(t.throw(n))}catch(n){o(n)}}function A(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,s)}A((t=t.apply(n,r||[])).next())}))};class x{constructor(){this.body=document.body,this.winnerApi=new E,this.drawWinnersPage=()=>I(this,void 0,void 0,(function*(){const n=document.querySelector(".winners_content"),r=document.querySelector(".winners_page"),e=yield this.winnerApi.getWinners();n.innerHTML="",r.innerHTML=`Page #${a.number}`,e.map((n=>I(this,void 0,void 0,(function*(){const r=yield this.winnerApi.getFullWinnerInfo(n);j.winners.drawWinner(r)}))))}))}listenSorting(){const n=document.querySelector(".time_header"),r=document.querySelector(".wins_header");this.body.addEventListener("click",(e=>I(this,void 0,void 0,(function*(){const t=e.target;t.classList.contains("wins_header")&&(n.innerHTML="Best time",t.classList.contains("asc")?(t.classList.remove("asc"),t.classList.add("desc"),t.innerHTML="Wins ↓",s.sortBy="wins",s.order="desc",j.winners.drawAllWinners()):(t.classList.add("asc"),t.innerHTML="Wins ↑",s.sortBy="wins",s.order="asc",j.winners.drawAllWinners())),t.classList.contains("time_header")&&(r.innerHTML="Wins",t.classList.contains("asc")?(t.classList.remove("asc"),t.classList.add("desc"),t.innerHTML="Best time ↓",s.sortBy="time",s.order="desc",j.winners.drawAllWinners()):(t.classList.add("asc"),t.innerHTML="Best time ↑",s.sortBy="time",s.order="asc",j.winners.drawAllWinners()))}))))}listenPagination(){this.body.addEventListener("click",(n=>I(this,void 0,void 0,(function*(){const r=yield g(),e=n.target;e.classList.contains("winners_prev")&&a.number>1&&(a.number-=1,this.drawWinnersPage()),e.classList.contains("winners_next")&&a.number<=Math.ceil(r/a.limit)&&(a.number+=1,this.drawWinnersPage())}))))}}var _=e(379),S=e.n(_),k=e(98);S()(k.Z,{insert:"head",singleton:!1}),k.Z.locals;var M=function(n,r,e,t){return new(e||(e=Promise))((function(i,o){function a(n){try{A(t.next(n))}catch(n){o(n)}}function s(n){try{A(t.throw(n))}catch(n){o(n)}}function A(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,s)}A((t=t.apply(n,r||[])).next())}))};class F{constructor(){this.body=document.body,this.carApi=new h,this.checkDisable=()=>M(this,void 0,void 0,(function*(){const n=document.querySelector(".pagination_prev"),r=document.querySelector(".pagination_next"),e=yield p();n.disabled=1===o.number,r.disabled=Math.ceil(e/o.limit)===o.number||e<=7}))}drawGarage(){const n=`\n        <div class='garage'>\n            <h3 class='garage_title'></h3>\n            <div class='garage_page'>Page #${o.number}</div>\n            <div class='garage_cars'></div>\n        </div>\n        `;this.body.insertAdjacentHTML("beforeend",n),window.addEventListener("DOMContentLoaded",(()=>M(this,void 0,void 0,(function*(){const n=document.querySelector(".garage_title"),r=yield this.carApi.getCars();return n.insertAdjacentHTML("beforeend",`Garage(${yield p()})`),r.forEach((n=>j.garage.drawCars(n)))})))),j.garage.drawPagination()}drawCars(n){const r=this.body.querySelector(".garage_cars"),e=`\n        <div class='car' id='${n.id}'>\n                <div class='car_selection'>\n                    <button class='selection_select'>select</button>\n                    <button class='selection_remove'>remove</button>\n                    <div class='selection_name'>${n.name}</div>\n                </div>\n                <div class='car_move'>\n                    <button class='move_start'>A</button>\n                    <button disabled class='move_stop'>B</button>\n                    <div class='move_icon'><svg width="65" height="65" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g><path style ='fill: ${n.color};' class="st0" d="M16,6H6L1,12V15H3A3,3 0 0,0 6,18A3,3 0 0,0 9,15H15A3,3 0 0,0 18,18A3,3 0 0,0 21,15H23V12C23,10.89 22.11,10 21,10H19L16,6M6.5,7.5H10.5V10H4.5L6.5,7.5M12,7.5H15.5L17.46,10H12V7.5M6,13.5A1.5,1.5 0 0,1 7.5,15A1.5,1.5 0 0,1 6,16.5A1.5,1.5 0 0,1 4.5,15A1.5,1.5 0 0,1 6,13.5M18,13.5A1.5,1.5 0 0,1 19.5,15A1.5,1.5 0 0,1 18,16.5A1.5,1.5 0 0,1 16.5,15A1.5,1.5 0 0,1 18,13.5Z" /></g></svg></div>\n                    <div class='move_finish'><img src='assets/images/finish_ico.png'></div>\n                    </div>\n                <div class='car_road'></div>\n        </div>`;r.insertAdjacentHTML("beforeend",e),this.checkDisable()}drawPagination(){this.body.querySelector(".garage").insertAdjacentHTML("beforeend","\n        <div class='garage_pagination'>\n            <button disabled class='pagination_prev'>prev</button>\n            <button class='pagination_next'>next</button>\n        </div>")}drawWinModal(n){return M(this,void 0,void 0,(function*(){if(!document.querySelector(".race_winner")){const r=`\n                <div class='race_winner'>\n                    <div class='winner_img'><img src = 'assets/images/win.png'></div>\n                    <div class='winner_message'>${(yield this.carApi.getCar(+n.id)).name} finished first!<br>Time: ${n.time} seconds.</div>\n                </div>`;this.body.insertAdjacentHTML("beforeend",r);const e=document.querySelector(".race_winner");setTimeout((()=>{e.parentNode.removeChild(e)}),5e3)}}))}}var L=e(234);S()(L.Z,{insert:"head",singleton:!1}),L.Z.locals;class z{constructor(){this.body=document.body}drawHeader(){this.body.insertAdjacentHTML("afterbegin","\n            <header>\n                <button class='header_garage'>to garage</button>\n                <button class='header_winners'>to winners</button>\n            </header>\n        ")}}var $=e(644);S()($.Z,{insert:"head",singleton:!1}),$.Z.locals;class T{constructor(){this.body=document.body}drawSettings(){this.body.insertAdjacentHTML("beforeend","\n            <div class='settings'>\n                <div class='settings_create'>\n                    <input type='text' placeholder='Type name of model...' class='create_input'>\n                    <input type='color' value='#DAC665' class='create_color'>\n                    <button class='create_btn'>Create</button>\n                </div>\n                <div class='settings_update'>\n                    <input type='text' placeholder='Type name of model...' class='update_input'>\n                    <input type='color' value='#DAC665' class='update_color'>\n                    <button class='update_btn'>Update</button>\n                </div>\n                <div class='settings_activity'>\n                    <button class='activity_race'>Race</button>\n                    <button class='activity_reset'>Reset</button>\n                    <button class='activity_generate'>Generate cars</button>\n                </div>\n            </div>\n        ")}}var R=e(867);S()(R.Z,{insert:"head",singleton:!1}),R.Z.locals;var D=function(n,r,e,t){return new(e||(e=Promise))((function(i,o){function a(n){try{A(t.next(n))}catch(n){o(n)}}function s(n){try{A(t.throw(n))}catch(n){o(n)}}function A(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,s)}A((t=t.apply(n,r||[])).next())}))};class W{constructor(){this.body=document.body,this.winnerApi=new E,this.checkDisable=()=>D(this,void 0,void 0,(function*(){const n=document.querySelector(".winners_prev"),r=document.querySelector(".winners_next"),e=yield g();n.disabled=1===a.number,r.disabled=Math.ceil(e/a.limit)===a.number||e<=10}))}drawWinnersBlock(){const n=`\n        <div class='winners hide'>\n            <h3 class='winners_title'></h3>\n            <div class='winners_page'>Page #${a.number}</div>\n            <table cellspacing='0' class='winners_table'>\n                <thead>\n                    <tr>\n                        <th>Number</th>\n                        <th>Car</th>\n                        <th>Name</th>\n                        <th class='wins_header'>Wins</th>\n                        <th class='time_header'>Best time</th>\n                    </tr>\n                </thead>\n                <tbody class = 'winners_content'></tbody>\n            </table>\n        </div>\n        `;this.body.insertAdjacentHTML("beforeend",n),window.addEventListener("DOMContentLoaded",(()=>D(this,void 0,void 0,(function*(){document.querySelector(".winners_title").insertAdjacentHTML("beforeend",`Winners(${yield g()})`),this.drawAllWinners()})))),j.winners.drawPagination()}drawAllWinners(){return D(this,void 0,void 0,(function*(){const n=document.querySelector(".winners_content"),r=yield this.winnerApi.getWinners();n.innerHTML="",r.length&&(yield Promise.all(r.map((n=>this.winnerApi.getFullWinnerInfo(n))))).forEach((n=>j.winners.drawWinner(n)))}))}drawWinner(n){const r=this.body.querySelector(".winners_content"),e=this.body.querySelectorAll(".winner").length,t=a.limit*(a.number-1)+e+1,i=`\n            <tr class='winner' id='${n.id}winner'>\n                <td class='winner_num'>${t}.</td>\n                <td class='winner_car'><svg width="65" height="65" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g><path style ='fill: ${n.color};' class="st0" d="M16,6H6L1,12V15H3A3,3 0 0,0 6,18A3,3 0 0,0 9,15H15A3,3 0 0,0 18,18A3,3 0 0,0 21,15H23V12C23,10.89 22.11,10 21,10H19L16,6M6.5,7.5H10.5V10H4.5L6.5,7.5M12,7.5H15.5L17.46,10H12V7.5M6,13.5A1.5,1.5 0 0,1 7.5,15A1.5,1.5 0 0,1 6,16.5A1.5,1.5 0 0,1 4.5,15A1.5,1.5 0 0,1 6,13.5M18,13.5A1.5,1.5 0 0,1 19.5,15A1.5,1.5 0 0,1 18,16.5A1.5,1.5 0 0,1 16.5,15A1.5,1.5 0 0,1 18,13.5Z" /></g></svg></td>\n                <td class='winner_name'>${n.name}</td>\n                <td class='winner_wins'>${n.wins}</td>\n                <td class='winner_time'>${n.time}s</td>\n            </tr>\n        `;r.insertAdjacentHTML("beforeend",i),this.checkDisable()}drawPagination(){this.body.querySelector(".winners").insertAdjacentHTML("beforeend","\n        <div class='winners_pagination'>\n            <button disabled class='winners_prev'>prev</button>\n            <button class='winners_next'>next</button>\n        </div>")}}var Y=e(424);S()(Y.Z,{insert:"head",singleton:!1}),Y.Z.locals;const j=new class{constructor(){this.header=new z,this.settings=new T,this.garage=new F,this.winners=new W,this.headerControllers=new v,this.settingsControllers=new w,this.garageControllers=new C,this.winnersControllers=new x}start(){this.header.drawHeader(),this.settings.drawSettings(),this.garage.drawGarage(),this.winners.drawWinnersBlock()}listen(){this.headerControllers.addListenerGarage(),this.headerControllers.addListenerWinners(),this.settingsControllers.listenCreateBtn(),this.settingsControllers.listenGenerateBtn(),this.settingsControllers.listenUpdateBtn(),this.settingsControllers.listenResetBtn(),this.settingsControllers.listenRaceBtn(),this.garageControllers.listenRemoveBtn(),this.garageControllers.listenSelectBtn(),this.garageControllers.listenPagination(),this.garageControllers.listenStart(),this.garageControllers.listenStop(),this.winnersControllers.listenPagination(),this.winnersControllers.listenSorting()}};j.start(),j.listen()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
